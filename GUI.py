# -*- coding: utf-8 -*-
import os
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QFileDialog
from webbrowser import open_new
from multiprocessing import freeze_support
import logging
from time import sleep
import main

QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)

default_config = main.load_config()['parameter']
default_config.update({
    'name': 'Test',
    'input_file': './test/sample.vcf.gz',
    'data_dir': './database',
    'ref': './reference',
    'qr_snps_txt': './test/fingerprint_snps.txt',
    'file_type': 'vcf'
})


class GUIHandler(logging.Handler):
    def __init__(self, connector: QtWidgets.QProgressDialog, progress_value, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.connector = connector
        self.progress = progress_value

    def emit(self, record):
        msg = self.format(record)
        if 'Progress of the analysis: ' in msg:
            self.progress.value = int(msg.split(': ')[-1].replace('%', ''))
        elif 'start' in msg:
            self.connector.setLabelText(msg)


class MyThread(QtCore.QThread):
    def __init__(self, handler, parameters: dict):
        super().__init__()
        self.statue = False
        self.res = 'Analysis failed to start.'
        self.parameters = parameters
        main.gui_log_setup(handler)

    def run(self):
        sleep(0.5)
        try:
            self.res = main.main(**self.parameters)
        except Exception as e:
            self.res = str(e).capitalize()
        else:
            self.statue = True
        finally:
            self.quit()


class ProgressValue:
    def __init__(self):
        self.value = 0


class ProgressNow:
    def __init__(self, inter: int):
        self.now_value = 0
        self.inter = 1000 / inter

    def value(self):
        return int(self.now_value // self.inter)

    def add(self):
        self.now_value += 1

    def set(self, value: int):
        self.now_value = value * self.inter


class Ui_PAGEANT(object):
    def setupUi(self, PAGEANT):
        PAGEANT.setObjectName("PAGEANT")
        PAGEANT.resize(600, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(60)
        sizePolicy.setVerticalStretch(48)
        sizePolicy.setHeightForWidth(PAGEANT.sizePolicy().hasHeightForWidth())
        PAGEANT.setSizePolicy(sizePolicy)
        PAGEANT.setMinimumSize(QtCore.QSize(600, 480))
        PAGEANT.setMaximumSize(QtCore.QSize(600, 480))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        PAGEANT.setFont(font)
        PAGEANT.setAutoFillBackground(False)
        self.MainWindow = QtWidgets.QWidget(PAGEANT)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.MainWindow.setFont(font)
        self.MainWindow.setObjectName("MainWindow")
        self.Function = QtWidgets.QTabWidget(self.MainWindow)
        self.Function.setGeometry(QtCore.QRect(15, 10, 571, 451))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Function.sizePolicy().hasHeightForWidth())
        self.Function.setSizePolicy(sizePolicy)
        self.Function.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Function.setFont(font)
        self.Function.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.Function.setIconSize(QtCore.QSize(25, 20))
        self.Function.setDocumentMode(False)
        self.Function.setTabsClosable(False)
        self.Function.setMovable(False)
        self.Function.setTabBarAutoHide(False)
        self.Function.setObjectName("Function")
        self.Basic = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Basic.setFont(font)
        self.Basic.setObjectName("Basic")
        self.i_vcf = QtWidgets.QLineEdit(self.Basic)
        self.i_vcf.setGeometry(QtCore.QRect(79, 180, 365, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_vcf.setFont(font)
        self.i_vcf.setObjectName("i_vcf")
        self.b_analyze = QtWidgets.QPushButton(self.Basic)
        self.b_analyze.setGeometry(QtCore.QRect(240, 370, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.b_analyze.setFont(font)
        self.b_analyze.setObjectName("b_analyze")
        self.s_vcf = QtWidgets.QToolButton(self.Basic)
        self.s_vcf.setGeometry(QtCore.QRect(440, 179, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.s_vcf.setFont(font)
        self.s_vcf.setObjectName("s_vcf")
        self.l_vcf = QtWidgets.QLabel(self.Basic)
        self.l_vcf.setGeometry(QtCore.QRect(40, 140, 101, 20))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.l_vcf.setFont(font)
        self.l_vcf.setObjectName("l_vcf")
        self.l_output = QtWidgets.QLabel(self.Basic)
        self.l_output.setGeometry(QtCore.QRect(40, 250, 171, 20))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.l_output.setFont(font)
        self.l_output.setObjectName("l_output")
        self.i_output = QtWidgets.QLineEdit(self.Basic)
        self.i_output.setGeometry(QtCore.QRect(79, 290, 365, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_output.setFont(font)
        self.i_output.setObjectName("i_output")
        self.s_output = QtWidgets.QToolButton(self.Basic)
        self.s_output.setGeometry(QtCore.QRect(440, 289, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.s_output.setFont(font)
        self.s_output.setObjectName("s_output")
        self.l_name = QtWidgets.QLabel(self.Basic)
        self.l_name.setGeometry(QtCore.QRect(40, 60, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.l_name.setFont(font)
        self.l_name.setObjectName("l_name")
        self.i_name = QtWidgets.QLineEdit(self.Basic)
        self.i_name.setGeometry(QtCore.QRect(100, 60, 121, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_name.setFont(font)
        self.i_name.setObjectName("i_name")
        self.i_output.raise_()
        self.i_vcf.raise_()
        self.b_analyze.raise_()
        self.l_vcf.raise_()
        self.l_output.raise_()
        self.s_output.raise_()
        self.l_name.raise_()
        self.i_name.raise_()
        self.s_vcf.raise_()
        self.Function.addTab(self.Basic, "")
        self.Data = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Data.setFont(font)
        self.Data.setObjectName("Data")
        self.s_ref = QtWidgets.QToolButton(self.Data)
        self.s_ref.setGeometry(QtCore.QRect(440, 280, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.s_ref.setFont(font)
        self.s_ref.setObjectName("s_ref")
        self.i_ref = QtWidgets.QLineEdit(self.Data)
        self.i_ref.setGeometry(QtCore.QRect(151, 281, 291, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_ref.setFont(font)
        self.i_ref.setObjectName("i_ref")
        self.b_default_1 = QtWidgets.QPushButton(self.Data)
        self.b_default_1.setGeometry(QtCore.QRect(240, 370, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.b_default_1.setFont(font)
        self.b_default_1.setObjectName("b_default_1")
        self.Analysis_data = QtWidgets.QGroupBox(self.Data)
        self.Analysis_data.setEnabled(True)
        self.Analysis_data.setGeometry(QtCore.QRect(30, 10, 501, 221))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Analysis_data.setFont(font)
        self.Analysis_data.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.Analysis_data.setObjectName("Analysis_data")
        self.l_database = QtWidgets.QLabel(self.Analysis_data)
        self.l_database.setGeometry(QtCore.QRect(30, 30, 201, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_database.setFont(font)
        self.l_database.setObjectName("l_database")
        self.i_database = QtWidgets.QLineEdit(self.Analysis_data)
        self.i_database.setGeometry(QtCore.QRect(60, 61, 355, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_database.setFont(font)
        self.i_database.setObjectName("i_database")
        self.s_database = QtWidgets.QToolButton(self.Analysis_data)
        self.s_database.setGeometry(QtCore.QRect(410, 60, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.s_database.setFont(font)
        self.s_database.setObjectName("s_database")
        self.l_sep = QtWidgets.QLabel(self.Analysis_data)
        self.l_sep.setGeometry(QtCore.QRect(30, 90, 181, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_sep.setFont(font)
        self.l_sep.setObjectName("l_sep")
        self.i_sep = QtWidgets.QLineEdit(self.Analysis_data)
        self.i_sep.setGeometry(QtCore.QRect(330, 120, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_sep.setFont(font)
        self.i_sep.setObjectName("i_sep")
        self.l_gwas_sep = QtWidgets.QLabel(self.Analysis_data)
        self.l_gwas_sep.setGeometry(QtCore.QRect(270, 120, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_gwas_sep.setFont(font)
        self.l_gwas_sep.setObjectName("l_gwas_sep")
        self._text_sep = QtWidgets.QLabel(self.Analysis_data)
        self._text_sep.setGeometry(QtCore.QRect(60, 120, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self._text_sep.setFont(font)
        self._text_sep.setObjectName("_text_sep")
        self.i_text_sep = QtWidgets.QLineEdit(self.Analysis_data)
        self.i_text_sep.setGeometry(QtCore.QRect(110, 120, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_text_sep.setFont(font)
        self.i_text_sep.setObjectName("i_text_sep")
        self.l_encoding = QtWidgets.QLabel(self.Analysis_data)
        self.l_encoding.setGeometry(QtCore.QRect(30, 150, 191, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_encoding.setFont(font)
        self.l_encoding.setObjectName("l_encoding")
        self.i_encoding = QtWidgets.QLineEdit(self.Analysis_data)
        self.i_encoding.setGeometry(QtCore.QRect(60, 180, 391, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_encoding.setFont(font)
        self.i_encoding.setObjectName("i_encoding")
        self.Reference = QtWidgets.QGroupBox(self.Data)
        self.Reference.setGeometry(QtCore.QRect(30, 240, 501, 121))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Reference.setFont(font)
        self.Reference.setObjectName("Reference")
        self.l_ref = QtWidgets.QLabel(self.Reference)
        self.l_ref.setGeometry(QtCore.QRect(30, 41, 91, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_ref.setFont(font)
        self.l_ref.setObjectName("l_ref")
        self.c_add_dist = QtWidgets.QCheckBox(self.Reference)
        self.c_add_dist.setGeometry(QtCore.QRect(30, 80, 451, 19))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.c_add_dist.setFont(font)
        self.c_add_dist.setChecked(True)
        self.c_add_dist.setObjectName("c_add_dist")
        self.Reference.raise_()
        self.Analysis_data.raise_()
        self.i_ref.raise_()
        self.b_default_1.raise_()
        self.s_ref.raise_()
        self.Function.addTab(self.Data, "")
        self.QRS = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.QRS.setFont(font)
        self.QRS.setObjectName("QRS")
        self.b_default_2 = QtWidgets.QPushButton(self.QRS)
        self.b_default_2.setGeometry(QtCore.QRect(240, 370, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.b_default_2.setFont(font)
        self.b_default_2.setObjectName("b_default_2")
        self.PRS = QtWidgets.QGroupBox(self.QRS)
        self.PRS.setGeometry(QtCore.QRect(30, 140, 501, 211))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.PRS.setFont(font)
        self.PRS.setFlat(False)
        self.PRS.setCheckable(False)
        self.PRS.setObjectName("PRS")
        self.l_p_threshold = QtWidgets.QLabel(self.PRS)
        self.l_p_threshold.setGeometry(QtCore.QRect(30, 100, 101, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_p_threshold.setFont(font)
        self.l_p_threshold.setObjectName("l_p_threshold")
        self.l_ref_2 = QtWidgets.QLabel(self.PRS)
        self.l_ref_2.setGeometry(QtCore.QRect(30, 140, 281, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_ref_2.setFont(font)
        self.l_ref_2.setObjectName("l_ref_2")
        self.l_EA = QtWidgets.QLabel(self.PRS)
        self.l_EA.setGeometry(QtCore.QRect(270, 30, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_EA.setFont(font)
        self.l_EA.setObjectName("l_EA")
        self.i_ld_ref = QtWidgets.QLineEdit(self.PRS)
        self.i_ld_ref.setGeometry(QtCore.QRect(51, 170, 351, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_ld_ref.setFont(font)
        self.i_ld_ref.setObjectName("i_ld_ref")
        self.l_BETA = QtWidgets.QLabel(self.PRS)
        self.l_BETA.setGeometry(QtCore.QRect(30, 60, 61, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_BETA.setFont(font)
        self.l_BETA.setObjectName("l_BETA")
        self.i_p_threshold = QtWidgets.QLineEdit(self.PRS)
        self.i_p_threshold.setGeometry(QtCore.QRect(150, 100, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_p_threshold.setFont(font)
        self.i_p_threshold.setObjectName("i_p_threshold")
        self.s_ld_ref_2 = QtWidgets.QToolButton(self.PRS)
        self.s_ld_ref_2.setGeometry(QtCore.QRect(400, 169, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.s_ld_ref_2.setFont(font)
        self.s_ld_ref_2.setObjectName("s_ld_ref_2")
        self.i_EA = QtWidgets.QLineEdit(self.PRS)
        self.i_EA.setGeometry(QtCore.QRect(310, 30, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_EA.setFont(font)
        self.i_EA.setObjectName("i_EA")
        self.i_SNP = QtWidgets.QLineEdit(self.PRS)
        self.i_SNP.setGeometry(QtCore.QRect(90, 30, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_SNP.setFont(font)
        self.i_SNP.setObjectName("i_SNP")
        self.l_P = QtWidgets.QLabel(self.PRS)
        self.l_P.setGeometry(QtCore.QRect(270, 60, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_P.setFont(font)
        self.l_P.setObjectName("l_P")
        self.i_BETA = QtWidgets.QLineEdit(self.PRS)
        self.i_BETA.setGeometry(QtCore.QRect(90, 60, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_BETA.setFont(font)
        self.i_BETA.setObjectName("i_BETA")
        self.i_P = QtWidgets.QLineEdit(self.PRS)
        self.i_P.setGeometry(QtCore.QRect(310, 60, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_P.setFont(font)
        self.i_P.setObjectName("i_P")
        self.l_SNP = QtWidgets.QLabel(self.PRS)
        self.l_SNP.setGeometry(QtCore.QRect(30, 30, 61, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_SNP.setFont(font)
        self.l_SNP.setObjectName("l_SNP")
        self.Clump = QtWidgets.QGroupBox(self.QRS)
        self.Clump.setEnabled(True)
        self.Clump.setGeometry(QtCore.QRect(30, 30, 501, 101))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Clump.setFont(font)
        self.Clump.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.Clump.setObjectName("Clump")
        self.l_p1 = QtWidgets.QLabel(self.Clump)
        self.l_p1.setGeometry(QtCore.QRect(30, 30, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_p1.setFont(font)
        self.l_p1.setObjectName("l_p1")
        self.l_p2 = QtWidgets.QLabel(self.Clump)
        self.l_p2.setGeometry(QtCore.QRect(30, 60, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_p2.setFont(font)
        self.l_p2.setObjectName("l_p2")
        self.i_p1 = QtWidgets.QLineEdit(self.Clump)
        self.i_p1.setGeometry(QtCore.QRect(80, 30, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_p1.setFont(font)
        self.i_p1.setAccessibleDescription("")
        self.i_p1.setObjectName("i_p1")
        self.i_p2 = QtWidgets.QLineEdit(self.Clump)
        self.i_p2.setGeometry(QtCore.QRect(80, 60, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_p2.setFont(font)
        self.i_p2.setObjectName("i_p2")
        self.l_r2 = QtWidgets.QLabel(self.Clump)
        self.l_r2.setGeometry(QtCore.QRect(260, 30, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_r2.setFont(font)
        self.l_r2.setObjectName("l_r2")
        self.i_r2 = QtWidgets.QLineEdit(self.Clump)
        self.i_r2.setGeometry(QtCore.QRect(310, 30, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_r2.setFont(font)
        self.i_r2.setObjectName("i_r2")
        self.l_kb = QtWidgets.QLabel(self.Clump)
        self.l_kb.setGeometry(QtCore.QRect(260, 60, 50, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_kb.setFont(font)
        self.l_kb.setObjectName("l_kb")
        self.i_kb = QtWidgets.QLineEdit(self.Clump)
        self.i_kb.setGeometry(QtCore.QRect(310, 60, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_kb.setFont(font)
        self.i_kb.setObjectName("i_kb")
        self.Clump.raise_()
        self.PRS.raise_()
        self.b_default_2.raise_()
        self.Function.addTab(self.QRS, "")
        self.QC = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.QC.setFont(font)
        self.QC.setStyleSheet("")
        self.QC.setObjectName("QC")
        self.c_sample_qc = QtWidgets.QGroupBox(self.QC)
        self.c_sample_qc.setGeometry(QtCore.QRect(20, 20, 521, 81))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.c_sample_qc.setFont(font)
        self.c_sample_qc.setCheckable(True)
        self.c_sample_qc.setChecked(True)
        self.c_sample_qc.setObjectName("c_sample_qc")
        self.c_vep = QtWidgets.QCheckBox(self.c_sample_qc)
        self.c_vep.setGeometry(QtCore.QRect(30, 40, 451, 19))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.c_vep.setFont(font)
        self.c_vep.setObjectName("c_vep")
        self.c_ref_qc = QtWidgets.QGroupBox(self.QC)
        self.c_ref_qc.setGeometry(QtCore.QRect(20, 110, 521, 291))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.c_ref_qc.setFont(font)
        self.c_ref_qc.setCheckable(True)
        self.c_ref_qc.setObjectName("c_ref_qc")
        self.c_use_qc_ref = QtWidgets.QCheckBox(self.c_ref_qc)
        self.c_use_qc_ref.setGeometry(QtCore.QRect(30, 40, 451, 19))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.c_use_qc_ref.setFont(font)
        self.c_use_qc_ref.setChecked(True)
        self.c_use_qc_ref.setObjectName("c_use_qc_ref")
        self.l_qc_parameter = QtWidgets.QLabel(self.c_ref_qc)
        self.l_qc_parameter.setGeometry(QtCore.QRect(10, 70, 231, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.l_qc_parameter.setFont(font)
        self.l_qc_parameter.setToolTip("")
        self.l_qc_parameter.setObjectName("l_qc_parameter")
        self.b_default_3 = QtWidgets.QPushButton(self.c_ref_qc)
        self.b_default_3.setGeometry(QtCore.QRect(400, 220, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.b_default_3.setFont(font)
        self.b_default_3.setObjectName("b_default_3")
        self.l_sex = QtWidgets.QLabel(self.c_ref_qc)
        self.l_sex.setGeometry(QtCore.QRect(20, 160, 181, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_sex.setFont(font)
        self.l_sex.setToolTip("")
        self.l_sex.setObjectName("l_sex")
        self.l_hwe = QtWidgets.QLabel(self.c_ref_qc)
        self.l_hwe.setGeometry(QtCore.QRect(20, 190, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_hwe.setFont(font)
        self.l_hwe.setToolTip("")
        self.l_hwe.setObjectName("l_hwe")
        self.l_het = QtWidgets.QLabel(self.c_ref_qc)
        self.l_het.setGeometry(QtCore.QRect(20, 220, 151, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_het.setFont(font)
        self.l_het.setToolTip("")
        self.l_het.setObjectName("l_het")
        self.i_f_male = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_f_male.setGeometry(QtCore.QRect(290, 160, 51, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_f_male.setFont(font)
        self.i_f_male.setObjectName("i_f_male")
        self.l_vmiss = QtWidgets.QLabel(self.c_ref_qc)
        self.l_vmiss.setGeometry(QtCore.QRect(360, 130, 81, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_vmiss.setFont(font)
        self.l_vmiss.setToolTip("")
        self.l_vmiss.setObjectName("l_vmiss")
        self.l_miss = QtWidgets.QLabel(self.c_ref_qc)
        self.l_miss.setGeometry(QtCore.QRect(20, 130, 181, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_miss.setFont(font)
        self.l_miss.setToolTip("")
        self.l_miss.setObjectName("l_miss")
        self.l_qc_male = QtWidgets.QLabel(self.c_ref_qc)
        self.l_qc_male.setGeometry(QtCore.QRect(200, 160, 81, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_qc_male.setFont(font)
        self.l_qc_male.setToolTip("")
        self.l_qc_male.setObjectName("l_qc_male")
        self.i_pihat = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_pihat.setGeometry(QtCore.QRect(200, 250, 141, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_pihat.setFont(font)
        self.i_pihat.setObjectName("i_pihat")
        self.l_het_mean = QtWidgets.QLabel(self.c_ref_qc)
        self.l_het_mean.setGeometry(QtCore.QRect(200, 220, 61, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_het_mean.setFont(font)
        self.l_het_mean.setObjectName("l_het_mean")
        self.i_f_female = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_f_female.setGeometry(QtCore.QRect(450, 160, 51, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_f_female.setFont(font)
        self.i_f_female.setObjectName("i_f_female")
        self.i_het = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_het.setGeometry(QtCore.QRect(270, 220, 31, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_het.setFont(font)
        self.i_het.setObjectName("i_het")
        self.l_pihat = QtWidgets.QLabel(self.c_ref_qc)
        self.l_pihat.setGeometry(QtCore.QRect(20, 250, 161, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_pihat.setFont(font)
        self.l_pihat.setToolTip("")
        self.l_pihat.setObjectName("l_pihat")
        self.i_hwe_p = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_hwe_p.setGeometry(QtCore.QRect(250, 190, 51, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_hwe_p.setFont(font)
        self.i_hwe_p.setObjectName("i_hwe_p")
        self.l_qc_female = QtWidgets.QLabel(self.c_ref_qc)
        self.l_qc_female.setGeometry(QtCore.QRect(360, 160, 81, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_qc_female.setFont(font)
        self.l_qc_female.setToolTip("")
        self.l_qc_female.setObjectName("l_qc_female")
        self.l_smiss = QtWidgets.QLabel(self.c_ref_qc)
        self.l_smiss.setGeometry(QtCore.QRect(200, 130, 81, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_smiss.setFont(font)
        self.l_smiss.setToolTip("")
        self.l_smiss.setObjectName("l_smiss")
        self.i_maf = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_maf.setGeometry(QtCore.QRect(200, 100, 141, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_maf.setFont(font)
        self.i_maf.setAccessibleDescription("")
        self.i_maf.setObjectName("i_maf")
        self.i_smiss = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_smiss.setGeometry(QtCore.QRect(290, 130, 51, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_smiss.setFont(font)
        self.i_smiss.setObjectName("i_smiss")
        self.l_hwe_2 = QtWidgets.QLabel(self.c_ref_qc)
        self.l_hwe_2.setGeometry(QtCore.QRect(200, 190, 61, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_hwe_2.setFont(font)
        self.l_hwe_2.setObjectName("l_hwe_2")
        self.i_vmiss = QtWidgets.QLineEdit(self.c_ref_qc)
        self.i_vmiss.setGeometry(QtCore.QRect(450, 130, 51, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_vmiss.setFont(font)
        self.i_vmiss.setObjectName("i_vmiss")
        self.l_het_sd = QtWidgets.QLabel(self.c_ref_qc)
        self.l_het_sd.setGeometry(QtCore.QRect(310, 220, 41, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_het_sd.setFont(font)
        self.l_het_sd.setObjectName("l_het_sd")
        self.l_maf = QtWidgets.QLabel(self.c_ref_qc)
        self.l_maf.setGeometry(QtCore.QRect(20, 100, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.l_maf.setFont(font)
        self.l_maf.setToolTip("")
        self.l_maf.setObjectName("l_maf")
        self.l_hwe_2.raise_()
        self.c_use_qc_ref.raise_()
        self.l_qc_parameter.raise_()
        self.b_default_3.raise_()
        self.l_sex.raise_()
        self.l_hwe.raise_()
        self.l_het.raise_()
        self.i_f_male.raise_()
        self.l_vmiss.raise_()
        self.l_miss.raise_()
        self.l_qc_male.raise_()
        self.i_pihat.raise_()
        self.l_het_mean.raise_()
        self.i_f_female.raise_()
        self.i_het.raise_()
        self.l_pihat.raise_()
        self.i_hwe_p.raise_()
        self.l_qc_female.raise_()
        self.l_smiss.raise_()
        self.i_maf.raise_()
        self.i_smiss.raise_()
        self.i_vmiss.raise_()
        self.l_het_sd.raise_()
        self.l_maf.raise_()
        self.c_ref_qc.raise_()
        self.c_sample_qc.raise_()
        self.Function.addTab(self.QC, "")
        self.Query_database = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Query_database.setFont(font)
        self.Query_database.setObjectName("Query_database")
        self.c_query_database = QtWidgets.QGroupBox(self.Query_database)
        self.c_query_database.setGeometry(QtCore.QRect(30, 40, 501, 181))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.c_query_database.setFont(font)
        self.c_query_database.setCheckable(True)
        self.c_query_database.setObjectName("c_query_database")
        self.c_clinvar = QtWidgets.QCheckBox(self.c_query_database)
        self.c_clinvar.setGeometry(QtCore.QRect(40, 60, 451, 19))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.c_clinvar.setFont(font)
        self.c_clinvar.setChecked(True)
        self.c_clinvar.setObjectName("c_clinvar")
        self.c_pharmgkb = QtWidgets.QCheckBox(self.c_query_database)
        self.c_pharmgkb.setGeometry(QtCore.QRect(40, 110, 451, 19))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.c_pharmgkb.setFont(font)
        self.c_pharmgkb.setChecked(True)
        self.c_pharmgkb.setObjectName("c_pharmgkb")
        self.Function.addTab(self.Query_database, "")
        self.QR_code = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.QR_code.setFont(font)
        self.QR_code.setObjectName("QR_code")
        self.c_qr_code = QtWidgets.QGroupBox(self.QR_code)
        self.c_qr_code.setGeometry(QtCore.QRect(30, 40, 501, 201))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.c_qr_code.setFont(font)
        self.c_qr_code.setCheckable(True)
        self.c_qr_code.setObjectName("c_qr_code")
        self.l_qr_snps = QtWidgets.QLabel(self.c_qr_code)
        self.l_qr_snps.setGeometry(QtCore.QRect(30, 60, 281, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.l_qr_snps.setFont(font)
        self.l_qr_snps.setObjectName("l_qr_snps")
        self.i_qr_snps = QtWidgets.QLineEdit(self.c_qr_code)
        self.i_qr_snps.setGeometry(QtCore.QRect(50, 110, 365, 25))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.i_qr_snps.setFont(font)
        self.i_qr_snps.setObjectName("i_qr_snps")
        self.s_qr_snps = QtWidgets.QToolButton(self.c_qr_code)
        self.s_qr_snps.setGeometry(QtCore.QRect(410, 109, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.s_qr_snps.setFont(font)
        self.s_qr_snps.setObjectName("s_qr_snps")
        self.Function.addTab(self.QR_code, "")
        PAGEANT.setCentralWidget(self.MainWindow)

        self.retranslateUi(PAGEANT)
        self.Function.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(PAGEANT)

    def retranslateUi(self, PAGEANT):
        _translate = QtCore.QCoreApplication.translate
        PAGEANT.setWindowTitle(_translate("PAGEANT", "PAGEANT (2021-02-22)"))
        self.i_vcf.setToolTip(_translate("PAGEANT", "Select the genotype file that you want to analyze"))
        self.i_vcf.setText(_translate("PAGEANT", "./test/sample.vcf.gz"))
        self.b_analyze.setToolTip(_translate("PAGEANT", "Start analyze"))
        self.b_analyze.setText(_translate("PAGEANT", "Analyze"))
        self.s_vcf.setText(_translate("PAGEANT", "..."))
        self.l_vcf.setToolTip(_translate("PAGEANT", "Input the genotype file that you want to analyze"))
        self.l_vcf.setText(_translate("PAGEANT", "Input file"))
        self.l_output.setText(_translate("PAGEANT", "Ouput Directory"))
        self.i_output.setToolTip(_translate("PAGEANT", "Specify the output directory"))
        self.i_output.setText(_translate("PAGEANT", os.path.join(os.getcwd(), 'res')))
        self.s_output.setText(_translate("PAGEANT", "..."))
        self.l_name.setText(_translate("PAGEANT", "Name"))
        self.i_name.setToolTip(_translate("PAGEANT", "Input your name here"))
        self.i_name.setText(_translate("PAGEANT", "test"))
        self.Function.setTabText(self.Function.indexOf(self.Basic), _translate("PAGEANT", "Basic"))
        self.s_ref.setText(_translate("PAGEANT", "..."))
        self.i_ref.setToolTip(_translate("PAGEANT", "Specify direcrtory of reference population data"))
        self.i_ref.setText(_translate("PAGEANT", "./reference"))
        self.b_default_1.setToolTip(_translate("PAGEANT", "Set default values"))
        self.b_default_1.setText(_translate("PAGEANT", "Default"))
        self.Analysis_data.setTitle(_translate("PAGEANT", "Analysis Data"))
        self.l_database.setText(_translate("PAGEANT", "Database directory"))
        self.i_database.setToolTip(_translate("PAGEANT", "Specify directory of database"))
        self.i_database.setText(_translate("PAGEANT", "./database"))
        self.s_database.setText(_translate("PAGEANT", "..."))
        self.l_sep.setText(_translate("PAGEANT", "Separator"))
        self.i_sep.setToolTip(_translate("PAGEANT", "Separator in GWAS data"))
        self.i_sep.setText(_translate("PAGEANT", "\\t"))
        self.l_gwas_sep.setToolTip(_translate("PAGEANT", "Index variant p-value threshold"))
        self.l_gwas_sep.setText(_translate("PAGEANT", "GWAS"))
        self._text_sep.setToolTip(_translate("PAGEANT", "Index variant p-value threshold"))
        self._text_sep.setText(_translate("PAGEANT", "Text"))
        self.i_text_sep.setToolTip(_translate("PAGEANT", "Separator in *.snps.ref"))
        self.i_text_sep.setText(_translate("PAGEANT", "\\t"))
        self.l_encoding.setText(_translate("PAGEANT", "File encoding"))
        self.i_encoding.setToolTip(_translate("PAGEANT", "File encoding of text file"))
        self.i_encoding.setText(_translate("PAGEANT", "UTF-8"))
        self.Reference.setTitle(_translate("PAGEANT", "Reference Population Data"))
        self.l_ref.setText(_translate("PAGEANT", "Directory"))
        self.c_add_dist.setToolTip(_translate("PAGEANT", "Query Clinvar Database"))
        self.c_add_dist.setText(_translate("PAGEANT", "Add reference distrubution information"))
        self.Function.setTabText(self.Function.indexOf(self.Data), _translate("PAGEANT", "Data"))
        self.b_default_2.setToolTip(_translate("PAGEANT", "Set default values"))
        self.b_default_2.setText(_translate("PAGEANT", "Default"))
        self.PRS.setTitle(_translate("PAGEANT", "PRS"))
        self.l_p_threshold.setToolTip(_translate("PAGEANT", "P threshold"))
        self.l_p_threshold.setText(_translate("PAGEANT", "P threshold"))
        self.l_ref_2.setText(_translate("PAGEANT", "Reference structure data"))
        self.l_EA.setToolTip(_translate("PAGEANT", "EA column name"))
        self.l_EA.setText(_translate("PAGEANT", "EA"))
        self.i_ld_ref.setToolTip(_translate("PAGEANT", "Specify directory of reference structure data"))
        self.i_ld_ref.setText(_translate("PAGEANT", os.path.abspath("./reference/ld_ref/hapmap3.vcf.gz")))
        self.l_BETA.setToolTip(_translate("PAGEANT", "BETA column name"))
        self.l_BETA.setText(_translate("PAGEANT", "BETA"))
        self.i_p_threshold.setToolTip(_translate("PAGEANT", "P threshold for PRS"))
        self.i_p_threshold.setText(_translate("PAGEANT", "1e-5"))
        self.i_p_threshold.setPlaceholderText(_translate("PAGEANT", "P threshold for PRS"))
        self.s_ld_ref_2.setText(_translate("PAGEANT", "..."))
        self.i_EA.setToolTip(_translate("PAGEANT", "EA column name"))
        self.i_EA.setText(_translate("PAGEANT", "EA"))
        self.i_EA.setPlaceholderText(_translate("PAGEANT", "EA column name"))
        self.i_SNP.setToolTip(_translate("PAGEANT", "SNP column name"))
        self.i_SNP.setText(_translate("PAGEANT", "SNP"))
        self.i_SNP.setPlaceholderText(_translate("PAGEANT", "SNP column name"))
        self.l_P.setToolTip(_translate("PAGEANT", "P column name"))
        self.l_P.setText(_translate("PAGEANT", "P"))
        self.i_BETA.setToolTip(_translate("PAGEANT", "BETA column name"))
        self.i_BETA.setText(_translate("PAGEANT", "BETA"))
        self.i_BETA.setPlaceholderText(_translate("PAGEANT", "BETA column name"))
        self.i_P.setToolTip(_translate("PAGEANT", "P column name"))
        self.i_P.setText(_translate("PAGEANT", "P"))
        self.i_P.setPlaceholderText(_translate("PAGEANT", "P column name"))
        self.l_SNP.setToolTip(_translate("PAGEANT", "SNP column name"))
        self.l_SNP.setText(_translate("PAGEANT", "SNP"))
        self.Clump.setTitle(_translate("PAGEANT", "Clump"))
        self.l_p1.setToolTip(_translate("PAGEANT", "Index variant p-value threshold"))
        self.l_p1.setText(_translate("PAGEANT", "p1"))
        self.l_p2.setToolTip(_translate("PAGEANT", "Sites within clump p-value threshold"))
        self.l_p2.setText(_translate("PAGEANT", "p2"))
        self.i_p1.setToolTip(_translate("PAGEANT", "Index variant p-value threshold"))
        self.i_p1.setText(_translate("PAGEANT", "1"))
        self.i_p2.setToolTip(_translate("PAGEANT", "Sites within clump p-value threshold"))
        self.i_p2.setText(_translate("PAGEANT", "1"))
        self.l_r2.setToolTip(_translate("PAGEANT", "r^2 threshold"))
        self.l_r2.setText(_translate("PAGEANT", "r2"))
        self.i_r2.setToolTip(_translate("PAGEANT",
                                        "<html><head/><body><p>r<span style=\" vertical-align:super;\">"
                                        "2</span> threshold</p></body></html>"))
        self.i_r2.setText(_translate("PAGEANT", "0.1"))
        self.l_kb.setToolTip(_translate("PAGEANT", "Clump kb radius"))
        self.l_kb.setText(_translate("PAGEANT", "kb"))
        self.i_kb.setToolTip(_translate("PAGEANT", "Clump kb radius"))
        self.i_kb.setText(_translate("PAGEANT", "250"))
        self.i_kb.setPlaceholderText(_translate("PAGEANT", "Clump kb radius"))
        self.Function.setTabText(self.Function.indexOf(self.QRS), _translate("PAGEANT", "PRS"))
        self.c_sample_qc.setToolTip(_translate("PAGEANT", "Activate function of sample QC"))
        self.c_sample_qc.setTitle(_translate("PAGEANT", "Sample QC"))
        self.c_vep.setToolTip(_translate("PAGEANT", "Using VEP to inspect the variants\' type in sample data"))
        self.c_vep.setText(_translate("PAGEANT", "Use VEP (Slow with too many variants or bad network!)"))
        self.c_ref_qc.setToolTip(_translate("PAGEANT", "Activate function of reference QC"))
        self.c_ref_qc.setTitle(_translate("PAGEANT", "Reference QC (Only support single reference file now)"))
        self.c_use_qc_ref.setToolTip(_translate("PAGEANT", "Use reference population data after QC in further analyze"))
        self.c_use_qc_ref.setText(_translate("PAGEANT", "Use reference data after QC "))
        self.l_qc_parameter.setText(_translate("PAGEANT", "Threshold for reference QC"))
        self.b_default_3.setToolTip(_translate("PAGEANT", "Set default values"))
        self.b_default_3.setText(_translate("PAGEANT", "Default"))
        self.l_sex.setText(_translate("PAGEANT", "F of sex discrepancy:"))
        self.l_hwe.setText(_translate("PAGEANT", "P value of HWE"))
        self.l_het.setText(_translate("PAGEANT", "Heterozygosity rate"))
        self.i_f_male.setToolTip(_translate("PAGEANT", "F of male maximum"))
        self.i_f_male.setText(_translate("PAGEANT", "0.4"))
        self.l_vmiss.setText(_translate("PAGEANT", "Per variant"))
        self.l_miss.setText(_translate("PAGEANT", "Missing genotype rate:"))
        self.l_qc_male.setText(_translate("PAGEANT", "Male"))
        self.i_pihat.setToolTip(_translate("PAGEANT", "Pihat of relatedness maximum"))
        self.i_pihat.setText(_translate("PAGEANT", "0.2"))
        self.i_pihat.setPlaceholderText(_translate("PAGEANT", "Clump kb radius"))
        self.l_het_mean.setToolTip(_translate("PAGEANT", "r^2 threshold"))
        self.l_het_mean.setText(_translate("PAGEANT", "Mean  ±"))
        self.i_f_female.setToolTip(_translate("PAGEANT", "F of female minimum"))
        self.i_f_female.setText(_translate("PAGEANT", "0.6"))
        self.i_het.setToolTip(_translate("PAGEANT", "Heterozygosity rate outlier "))
        self.i_het.setText(_translate("PAGEANT", "3"))
        self.l_pihat.setText(_translate("PAGEANT", "Pihat of relatedness"))
        self.i_hwe_p.setToolTip(_translate("PAGEANT", "The power of HWE\'s p-value maximum"))
        self.i_hwe_p.setText(_translate("PAGEANT", "50"))
        self.l_qc_female.setText(_translate("PAGEANT", "Female"))
        self.l_smiss.setText(_translate("PAGEANT", "Per sample"))
        self.i_maf.setToolTip(_translate("PAGEANT", "Minor allele frequency minimum"))
        self.i_maf.setText(_translate("PAGEANT", "0.01"))
        self.i_smiss.setToolTip(_translate("PAGEANT", "Missing genotype rate per sample maximum"))
        self.i_smiss.setText(_translate("PAGEANT", "0.02"))
        self.l_hwe_2.setToolTip(_translate("PAGEANT", "r^2 threshold"))
        self.l_hwe_2.setText(_translate("PAGEANT", "10 ^  -"))
        self.i_vmiss.setToolTip(_translate("PAGEANT", "Missing genotype rate per variant maximum"))
        self.i_vmiss.setText(_translate("PAGEANT", "0.02"))
        self.l_het_sd.setToolTip(_translate("PAGEANT", "r^2 threshold"))
        self.l_het_sd.setText(_translate("PAGEANT", "sd"))
        self.l_maf.setText(_translate("PAGEANT", "Minor allele frequency"))
        self.Function.setTabText(self.Function.indexOf(self.QC), _translate("PAGEANT", "QC"))
        self.c_query_database.setToolTip(_translate("PAGEANT", "Activate function of querying database"))
        self.c_query_database.setTitle(_translate("PAGEANT", "Query database"))
        self.c_clinvar.setToolTip(_translate("PAGEANT", "Query Clinvar Database"))
        self.c_clinvar.setText(_translate("PAGEANT", "Query Clinvar Database"))
        self.c_pharmgkb.setToolTip(_translate("PAGEANT", "Query PharmGKB Database"))
        self.c_pharmgkb.setText(_translate("PAGEANT", "Query PharmGKB Database"))
        self.Function.setTabText(self.Function.indexOf(self.Query_database), _translate("PAGEANT", "Query Database"))
        self.c_qr_code.setToolTip(_translate("PAGEANT", "Activate function of generating QR code"))
        self.c_qr_code.setTitle(_translate("PAGEANT", "Generate QR code"))
        self.l_qr_snps.setText(_translate("PAGEANT", "Need SNPs\' list text"))
        self.i_qr_snps.setToolTip(_translate("PAGEANT", "Specify the text which include the needed SNPs list"))
        self.i_qr_snps.setText(_translate("PAGEANT", "./test/fingerprint_snps.txt"))
        self.s_qr_snps.setText(_translate("PAGEANT", "..."))
        self.Function.setTabText(self.Function.indexOf(self.QR_code), _translate("PAGEANT", "QR code"))


class MyMainForm(QMainWindow, Ui_PAGEANT):
    def __init__(self, parent=None):
        super(MyMainForm, self).__init__(parent)
        self.setupUi(self)

        self.s_vcf.clicked.connect(self.o_vcf)
        self.s_output.clicked.connect(self.o_output)
        self.s_database.clicked.connect(self.o_database)
        self.s_ref.clicked.connect(self.o_ref)
        self.s_ld_ref_2.clicked.connect(self.o_ld_ref)
        self.s_qr_snps.clicked.connect(self.o_qr_snps)
        self.b_analyze.clicked.connect(self.run)
        self.b_default_1.clicked.connect(self.set_default_1)
        self.b_default_2.clicked.connect(self.set_default_2)
        self.b_default_3.clicked.connect(self.set_default_3)

        self.timer = QtCore.QBasicTimer()

        self.inter = 50
        self.progress_value = ProgressValue()
        self.progress_now = ProgressNow(self.inter)

        # progress config dict
        self.parameters = default_config

    def o_vcf(self):
        get_directory_path = QFileDialog.getOpenFileName(self, "Select the input file", os.getcwd(),
                                                         filter='vcf (*.vcf *.vcf.gz);; 23andme (*.txt)')
        self.i_vcf.setText(get_directory_path[0])
        self.parameters['input_file'], file_type = get_directory_path
        self.parameters['file_type'] = file_type.split(' ')[0]

    def o_output(self):
        get_dir_path = QFileDialog.getExistingDirectory(self, "Select the output directory", os.getcwd())
        self.i_output.setText(get_dir_path)
        self.parameters['output'] = get_dir_path

    def o_database(self):
        get_dir_path = QFileDialog.getExistingDirectory(self, "Select the database directory", os.getcwd())
        self.i_database.setText(get_dir_path)
        self.parameters['database'] = get_dir_path

    def o_ref(self):
        get_dir_path = QFileDialog.getExistingDirectory(self, "Select the reference population directory", os.getcwd())
        self.i_ref.setText(get_dir_path)
        self.parameters['ref'] = get_dir_path

    def o_ld_ref(self):
        get_directory_path = QFileDialog.getOpenFileName(self, "Select the reference structure file", os.getcwd(),
                                                         filter='vcf (*.vcf *.vcf.gz)')
        self.i_ld_ref.setText(get_directory_path[0])
        self.parameters['ref_structure'] = get_directory_path

    def o_qr_snps(self):
        get_directory_path = QFileDialog.getOpenFileName(self, "Select the SNPs list file", os.getcwd())
        self.i_qr_snps.setText(get_directory_path[0])
        self.parameters['qr_snps_txt'] = get_directory_path

    def set_default_1(self):
        self.i_database.setText(default_config['data_dir'])
        self.i_text_sep.setText('\\t' if default_config['text_sep'] == '\t' else default_config['text_sep'])
        self.i_sep.setText('\\t' if default_config['sep'] == '\t' else default_config['sep'])
        self.i_encoding.setText(default_config['encoding'])
        self.i_ref.setText(default_config['ref'])

    def set_default_2(self):
        self.i_p1.setText(str(default_config['clump-p1']))
        self.i_p2.setText(str(default_config['clump-p2']))
        self.i_r2.setText(str(default_config['clump-r2']))
        self.i_kb.setText(str(default_config['clump-kb']))
        self.i_P.setText(default_config['P'])
        self.i_BETA.setText(default_config['BETA'])
        self.i_SNP.setText(default_config['SNP'])
        self.i_EA.setText(default_config['EA'])
        self.i_p_threshold.setText(str(default_config['p_threshold']))
        self.i_ld_ref.setText(default_config['ref_structure'])

    def set_default_3(self):
        self.i_maf.setText(str(default_config['qc_maf']))
        self.i_smiss.setText(str(default_config['qc_smiss']))
        self.i_vmiss.setText(str(default_config['qc_vmiss']))
        self.i_hwe_p.setText(str(default_config['qc_hardy']))
        self.i_pihat.setText(str(default_config['qc_pihat']))
        self.i_f_male.setText(str(default_config['qc_male_F']))
        self.i_f_female.setText(str(default_config['qc_female_F']))
        self.i_het.setText(str(default_config['qc_het']))

    def timerEvent(self, a0: 'QtCore.QTimerEvent') -> None:
        if self.progress_now.value() < self.progress_value.value:
            self.progress_now.set(self.progress_value.value)
        elif self.progress_now.value() < self.progress_value.value + 4:
            self.progress_now.add()
        if self.progress.value() != self.progress_now.value():
            self.progress.setValue(self.progress_now.value())

    def cancel_failed(self):
        QtWidgets.QMessageBox.critical(self, 'Error', 'Cancel function disable!', QtWidgets.QMessageBox.Close)

    def report(self):
        self.b_analyze.setEnabled(True)
        self.progress.setWindowFlags(QtCore.Qt.WindowMinimizeButtonHint | QtCore.Qt.WindowCloseButtonHint)
        self.thread.deleteLater()
        self.timer.stop()
        if self.thread.statue:
            QtWidgets.QMessageBox.information(self, 'Result', self.thread.res)
        else:
            QtWidgets.QMessageBox.critical(self, 'Error', self.thread.res, QtWidgets.QMessageBox.Close)
        reply = QtWidgets.QMessageBox.question(self, 'Question', 'Do you want to open report now?',
                                               QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Close,
                                               QtWidgets.QMessageBox.Ok)
        self.b_analyze.setEnabled(True)
        if reply == QtWidgets.QMessageBox.Ok:
            open_new(os.path.join(self.parameters['output'], 'report.html'))
        else:
            return

    def run(self):
        self.parameters.update(dict(zip(['name', 'data_dir', 'input_file', 'encoding', 'ref', 'ref_structure', 'output',
                                         'SNP', 'EA', 'P', 'BETA', 'p_threshold', 'clump-p1', 'clump-r2',
                                         'clump-kb', 'clump-p2', 'qr_snps_txt', 'qc_maf', 'qc_vmiss', 'qc_smiss',
                                         'qc_hardy', 'qc_het', 'qc_male_F', 'qc_female_F', 'qc_pihat', 'use_qc_ref',
                                         'sample_qc', 'ref_dist', 'ref_qc', 'vep', 'query_database', 'pharmgkb',
                                         'clinvar', 'qr_code'
                                         ],
                                        [self.i_name.text(), self.i_database.text(), self.i_vcf.text(),
                                         self.i_encoding.text(), self.i_ref.text(), self.i_ld_ref.text(),
                                         self.i_output.text(), self.i_SNP.text(), self.i_EA.text(), self.i_P.text(),
                                         self.i_BETA.text(), float(self.i_p_threshold.text()), float(self.i_p1.text()),
                                         float(self.i_r2.text()), int(self.i_kb.text()), float(self.i_p2.text()),
                                         self.i_qr_snps.text(), float(self.i_maf.text()), float(self.i_vmiss.text()),
                                         float(self.i_smiss.text()), int(self.i_hwe_p.text()), int(self.i_het.text()),
                                         float(self.i_f_male.text()), float(self.i_f_female.text()),
                                         float(self.i_pihat.text()), self.c_use_qc_ref.isChecked(),
                                         self.c_sample_qc.isChecked(), self.c_add_dist.isChecked(),
                                         self.c_ref_qc.isChecked(), self.c_vep.isChecked(),
                                         self.c_query_database.isChecked(), self.c_pharmgkb.isChecked(),
                                         self.c_clinvar.isChecked(), self.c_qr_code.isChecked()
                                         ])))
        self.parameters.update({'sep': self.i_sep.text() if self.i_sep.text() != r'\t' else '\t',
                                'text_sep': self.i_text_sep.text() if self.i_text_sep.text() != r'\t' else '\t'
                                })
        self.progress_value = ProgressValue()
        self.progress_now = ProgressNow(self.inter)
        self.progress = QtWidgets.QProgressDialog('Analysis start.', 'Cancel', 0, 100)
        self.progress.setWindowModality(QtCore.Qt.NonModal)
        self.progress.setAutoClose(True)
        self.progress.setAutoReset(False)
        self.progress.setWindowFlags(QtCore.Qt.WindowMinimizeButtonHint)
        # todo: How to cancel the progress?
        self.progress.canceled.connect(self.cancel_failed)
        self.progress.setFixedSize(500, 150)
        self.progress.show()
        self.b_analyze.setEnabled(False)

        handler = GUIHandler(self.progress, self.progress_value)
        self.thread = MyThread(handler, self.parameters)

        self.timer.start(self.inter, self)
        self.thread.start()
        self.thread.finished.connect(self.report)


if __name__ == "__main__":
    freeze_support()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = MyMainForm()
    MainWindow.show()
    sys.exit(app.exec_())
