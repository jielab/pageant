# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys
import main
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QFileDialog
from webbrowser import open_new


class Ui_PAGEANT(object):
    def setupUi(self, PAGEANT):
        PAGEANT.setObjectName("PAGEANT")
        PAGEANT.resize(600, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(60)
        sizePolicy.setVerticalStretch(48)
        sizePolicy.setHeightForWidth(PAGEANT.sizePolicy().hasHeightForWidth())
        PAGEANT.setSizePolicy(sizePolicy)
        PAGEANT.setMinimumSize(QtCore.QSize(600, 480))
        PAGEANT.setMaximumSize(QtCore.QSize(600, 480))
        font = QtGui.QFont()
        font.setFamily("Arial Symbol")
        PAGEANT.setFont(font)
        PAGEANT.setAutoFillBackground(False)
        self.MainWindow = QtWidgets.QWidget(PAGEANT)
        font = QtGui.QFont()
        font.setFamily("Arial Symbol")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.MainWindow.setFont(font)
        self.MainWindow.setObjectName("MainWindow")
        self.TabWidget = QtWidgets.QTabWidget(self.MainWindow)
        self.TabWidget.setGeometry(QtCore.QRect(15, 10, 570, 440))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TabWidget.sizePolicy().hasHeightForWidth())
        self.TabWidget.setSizePolicy(sizePolicy)
        self.TabWidget.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.TabWidget.setFont(font)
        self.TabWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.TabWidget.setIconSize(QtCore.QSize(25, 20))
        self.TabWidget.setDocumentMode(False)
        self.TabWidget.setTabsClosable(False)
        self.TabWidget.setMovable(False)
        self.TabWidget.setTabBarAutoHide(False)
        self.TabWidget.setObjectName("TabWidget")
        self.Basic_tab = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.Basic_tab.setFont(font)
        self.Basic_tab.setObjectName("Basic_tab")
        self.input_vcf = QtWidgets.QLineEdit(self.Basic_tab)
        self.input_vcf.setGeometry(QtCore.QRect(90, 160, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.input_vcf.setFont(font)
        self.input_vcf.setObjectName("input_vcf")
        self.label_name = QtWidgets.QLabel(self.Basic_tab)
        self.label_name.setGeometry(QtCore.QRect(40, 60, 80, 20))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_name.setFont(font)
        self.label_name.setObjectName("label_name")
        self.name = QtWidgets.QLineEdit(self.Basic_tab)
        self.name.setGeometry(QtCore.QRect(90, 60, 150, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.name.setFont(font)
        self.name.setObjectName("name")
        self.Analyze = QtWidgets.QPushButton(self.Basic_tab)
        self.Analyze.setGeometry(QtCore.QRect(240, 360, 90, 30))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.Analyze.setFont(font)
        self.Analyze.setObjectName("Analyze")
        self.single_file = QtWidgets.QToolButton(self.Basic_tab)
        self.single_file.setGeometry(QtCore.QRect(440, 159, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.single_file.setFont(font)
        self.single_file.setObjectName("single_file")
        self.label_vcf = QtWidgets.QLabel(self.Basic_tab)
        self.label_vcf.setGeometry(QtCore.QRect(40, 120, 80, 20))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_vcf.setFont(font)
        self.label_vcf.setObjectName("label_vcf")
        self.label_o = QtWidgets.QLabel(self.Basic_tab)
        self.label_o.setGeometry(QtCore.QRect(40, 250, 131, 20))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_o.setFont(font)
        self.label_o.setObjectName("label_o")
        self.Output_dir = QtWidgets.QLineEdit(self.Basic_tab)
        self.Output_dir.setGeometry(QtCore.QRect(90, 270, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.Output_dir.setFont(font)
        self.Output_dir.setObjectName("Output_dir")
        self.dir_select = QtWidgets.QToolButton(self.Basic_tab)
        self.dir_select.setGeometry(QtCore.QRect(440, 269, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.dir_select.setFont(font)
        self.dir_select.setObjectName("dir_select")
        self.input_vcf.raise_()
        self.Output_dir.raise_()
        self.Analyze.raise_()
        self.single_file.raise_()
        self.label_vcf.raise_()
        self.label_o.raise_()
        self.label_name.raise_()
        self.dir_select.raise_()
        self.TabWidget.addTab(self.Basic_tab, "")
        self.Advanced_tab = QtWidgets.QWidget()
        self.Advanced_tab.setObjectName("Advanced_tab")
        self.input_qual = QtWidgets.QLineEdit(self.Advanced_tab)
        self.input_qual.setGeometry(QtCore.QRect(90, 160, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.input_qual.setFont(font)
        self.input_qual.setObjectName("input_qual")
        self.label_6 = QtWidgets.QLabel(self.Advanced_tab)
        self.label_6.setGeometry(QtCore.QRect(40, 20, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.multi_files = QtWidgets.QToolButton(self.Advanced_tab)
        self.multi_files.setGeometry(QtCore.QRect(440, 159, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.multi_files.setFont(font)
        self.multi_files.setObjectName("multi_files")
        self.label_ref_dir = QtWidgets.QLabel(self.Advanced_tab)
        self.label_ref_dir.setGeometry(QtCore.QRect(40, 275, 251, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_ref_dir.setFont(font)
        self.label_ref_dir.setObjectName("label_ref_dir")
        self.label_qual = QtWidgets.QLabel(self.Advanced_tab)
        self.label_qual.setGeometry(QtCore.QRect(70, 125, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_qual.setFont(font)
        self.label_qual.setObjectName("label_qual")
        self.label_quan = QtWidgets.QLabel(self.Advanced_tab)
        self.label_quan.setGeometry(QtCore.QRect(70, 195, 141, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_quan.setFont(font)
        self.label_quan.setObjectName("label_quan")
        self.multi_files2 = QtWidgets.QToolButton(self.Advanced_tab)
        self.multi_files2.setGeometry(QtCore.QRect(440, 229, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.multi_files2.setFont(font)
        self.multi_files2.setObjectName("multi_files2")
        self.dir_select2 = QtWidgets.QToolButton(self.Advanced_tab)
        self.dir_select2.setGeometry(QtCore.QRect(440, 309, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.dir_select2.setFont(font)
        self.dir_select2.setObjectName("dir_select2")
        self.input_quan = QtWidgets.QLineEdit(self.Advanced_tab)
        self.input_quan.setGeometry(QtCore.QRect(90, 230, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.input_quan.setFont(font)
        self.input_quan.setObjectName("input_quan")
        self.input_ref_dir = QtWidgets.QLineEdit(self.Advanced_tab)
        self.input_ref_dir.setGeometry(QtCore.QRect(90, 310, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.input_ref_dir.setFont(font)
        self.input_ref_dir.setObjectName("input_ref_dir")
        self.default_button = QtWidgets.QPushButton(self.Advanced_tab)
        self.default_button.setGeometry(QtCore.QRect(240, 360, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.default_button.setFont(font)
        self.default_button.setObjectName("default_button")
        self.input_ind = QtWidgets.QLineEdit(self.Advanced_tab)
        self.input_ind.setGeometry(QtCore.QRect(90, 90, 352, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.input_ind.setFont(font)
        self.input_ind.setText("")
        self.input_ind.setObjectName("input_ind")
        self.single_file2 = QtWidgets.QToolButton(self.Advanced_tab)
        self.single_file2.setGeometry(QtCore.QRect(440, 89, 41, 27))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.single_file2.setFont(font)
        self.single_file2.setObjectName("single_file2")
        self.label_ind = QtWidgets.QLabel(self.Advanced_tab)
        self.label_ind.setGeometry(QtCore.QRect(70, 55, 131, 25))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_ind.setFont(font)
        self.label_ind.setObjectName("label_ind")
        self.input_qual.raise_()
        self.label_6.raise_()
        self.label_ref_dir.raise_()
        self.label_qual.raise_()
        self.label_quan.raise_()
        self.input_quan.raise_()
        self.input_ref_dir.raise_()
        self.default_button.raise_()
        self.input_ind.raise_()
        self.label_ind.raise_()
        self.multi_files2.raise_()
        self.single_file2.raise_()
        self.dir_select2.raise_()
        self.multi_files.raise_()
        self.TabWidget.addTab(self.Advanced_tab, "")
        PAGEANT.setCentralWidget(self.MainWindow)
        self.statusbar = QtWidgets.QStatusBar(PAGEANT)
        self.statusbar.setObjectName("statusbar")
        PAGEANT.setStatusBar(self.statusbar)

        self.retranslateUi(PAGEANT)
        self.TabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(PAGEANT)

    def retranslateUi(self, PAGEANT):
        _translate = QtCore.QCoreApplication.translate
        PAGEANT.setWindowTitle(_translate("PAGEANT", "PAGEANT"))
        self.Analyze.setText(_translate("PAGEANT", "Analyze"))
        self.single_file.setText(_translate("PAGEANT", "..."))
        self.label_vcf.setText(_translate("PAGEANT", "Input VCF"))
        self.label_name.setText(_translate("PAGEANT", "Name"))
        self.label_o.setText(_translate("PAGEANT", "Ouput Directory"))
        self.dir_select.setText(_translate("PAGEANT", "..."))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.Basic_tab), _translate("PAGEANT", "Basic"))
        self.label_6.setText(_translate("PAGEANT", "Analysis Data"))
        self.multi_files.setText(_translate("PAGEANT", "..."))
        self.label_ref_dir.setText(_translate("PAGEANT", "Reference Population Directory"))
        self.label_qual.setText(_translate("PAGEANT", "Qualitative Data"))
        self.label_quan.setText(_translate("PAGEANT", "Quantitative Data"))
        self.multi_files2.setText(_translate("PAGEANT", "..."))
        self.dir_select2.setText(_translate("PAGEANT", "..."))
        self.default_button.setText(_translate("PAGEANT", "Default"))
        self.single_file2.setText(_translate("PAGEANT", "..."))
        self.label_ind.setText(_translate("PAGEANT", "Indicators Data"))
        self.TabWidget.setTabText(self.TabWidget.indexOf(self.Advanced_tab), _translate("PAGEANT", "Advanced"))
        # default parameters
        self.input_vcf.setText('./test.vcf')
        self.input_ind.setText('Database/001指标.xlsx')
        self.input_qual.setText('Database/002算法.xlsx')
        self.input_quan.setText('Database/003算法.xlsx')
        self.input_ref_dir.setText('./Reference')
        self.Output_dir.setText('.')
        self.name.setText('Test')


class MyMainForm(QMainWindow, Ui_PAGEANT):
    def __init__(self, parent=None):
        super(MyMainForm, self).__init__(parent)
        self.setupUi(self)
        self.single_file.clicked.connect(self.openfile_single_vcf)
        self.single_file2.clicked.connect(self.openfile_single_data)
        self.multi_files.clicked.connect(self.openfile_multi)
        self.multi_files2.clicked.connect(self.openfile_multi2)
        self.dir_select.clicked.connect(self.opendir)
        self.dir_select2.clicked.connect(self.opendir2)
        self.Analyze.clicked.connect(self.run)
        self.default_button.clicked.connect(self.default)
        self.parameters = {'name': 'Test',
                           'vcf_file': './test.vcf',
                           'ind_file': 'Database/001指标.xlsx',
                           'qual_files': ['Database/002算法.xlsx'],
                           'quan_files': ['Database/003算法.xlsx'],
                           'ref': './Reference',
                           'output': '.'}

    def openfile_single_vcf(self):
        get_directory_path = QFileDialog.getOpenFileName(self, "Select the sample vcf", os.getcwd(),
                                                         filter='VCF (*.vcf)')
        self.input_vcf.setText(get_directory_path[0])
        self.parameters['vcf_file'] = get_directory_path[0]

    def openfile_single_data(self):
        get_file_path = QFileDialog.getOpenFileName(self, "Select the indicators data file", os.getcwd())
        self.input_ind.setText(get_file_path[0])
        self.parameters['ind_file'] = get_file_path[0]

    def openfile_multi(self):
        get_files_path = QFileDialog.getOpenFileNames(self, "Select the qualitative data files", os.getcwd(),
                                                      filter='File (*.xlsx *.xls *.txt); All (*.*)',
                                                      initialFilter='File')
        self.input_qual.setText('; '.join(i.split('/')[-1] for i in get_files_path[0]))
        self.parameters['qual_files'] = get_files_path[0]

    def openfile_multi2(self):
        get_files_path = QFileDialog.getOpenFileNames(self, "Select the quantitative data files", os.getcwd(),
                                                      filter='File (*.xlsx *.xls *.txt); All (*.*)',
                                                      initialFilter='File'
                                                      )
        self.input_quan.setText('; '.join(i.split('/')[-1] for i in get_files_path[0]))
        self.parameters['quan_files'] = get_files_path[0]

    def opendir(self):
        get_dir_path = QFileDialog.getExistingDirectory(self, "Select the output directory", os.getcwd())
        self.Output_dir.setText(get_dir_path)
        self.parameters['output'] = get_dir_path

    def opendir2(self):
        get_dir_path = QFileDialog.getExistingDirectory(self, "Select the reference population directory", os.getcwd())
        self.input_ref_dir.setText(get_dir_path)
        self.parameters['ref'] = get_dir_path

    def default(self):
        self.input_ind.setText('Database/001指标.xlsx')
        self.input_qual.setText('Database/002算法.xlsx')
        self.input_quan.setText('Database/003算法.xlsx')
        self.input_ref_dir.setText('./Reference')
        self.parameters['ind_file'] = self.input_ind.text()
        self.parameters['qual_files'] = [self.input_qual.text()]
        self.parameters['quan_files'] = [self.input_quan.text()]
        self.parameters['ref'] = self.input_ref_dir.text()

    def run(self):
        self.parameters['name'] = self.name.text()
        try:
            QtWidgets.QMessageBox.information(self, 'Result', main.main(**self.parameters))
        except Exception as e:
            QtWidgets.QMessageBox.critical(self, 'Error', str(e).capitalize(), QtWidgets.QMessageBox.Close)
        else:
            reply = QtWidgets.QMessageBox.question(self, 'Question', 'Do you want to open report now?',
                                        QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Close,
                                              QtWidgets.QMessageBox.Ok)
            if reply == QtWidgets.QMessageBox.Ok:
                open_new(os.path.join('.', 'report.html'))
            else:
                return


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = MyMainForm()
    MainWindow.show()
    sys.exit(app.exec_())
